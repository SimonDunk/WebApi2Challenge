{
	"info": {
		"_postman_id": "eb4d08e9-7d88-46fb-af14-75c10997ac1c",
		"name": "ProductApiTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET products",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ef30a858-f868-4358-acf7-478243a44c0b",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							" ",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"Content-Type is application/json\"] = ",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"}",
							"",
							"if(responseCode.code === 200){",
							"    postman.setEnvironmentVariable(\"ProductId\", pm.response.json()[0].id);",
							"    postman.setEnvironmentVariable(\"ProductJSON\", JSON.stringify(pm.response.json()[0]));",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url}}/api/Product",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"Product"
					]
				},
				"description": "https://localhost:44382/api/Product"
			},
			"response": []
		},
		{
			"name": "GET product/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10f82319-841b-4678-b1af-fc30455cb84d",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							" ",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"Content-Type is application/json\"] = ",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"}",
							"",
							"tests[\"Product has correct values\"] = (has());",
							"",
							"function has()",
							"{",
							"    return responseBody.has(getVar());",
							"}",
							"",
							"",
							"function getVar(){",
							"    return postman.getEnvironmentVariable(\"ProductJSON\");",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url}}/api/Product/{{ProductId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"Product",
						"{{ProductId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST product",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "599b50dd-1714-4d13-9c48-12f8906fc950",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							" ",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"Content-Type is application/json\"] = ",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"}",
							"",
							"tests[\"Product has correct values\"] = (has(\"Description\") && has(\"Model\") && has(\"Brand\"));",
							"",
							"function has(txt)",
							"{",
							"    return responseBody.has(getVar(\"Post\"+txt));",
							"}",
							"",
							"function getVar(txt){",
							"    return postman.getEnvironmentVariable(txt);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"Description\": \"{{PostDescription}}\",\n\t\"Model\": \"{{PostModel}}\", \n\t\"Brand\": \"{{PostBrand}}\"\n}"
				},
				"url": {
					"raw": "{{url}}/api/Product",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"Product"
					]
				},
				"description": "https://localhost:44382/api/Product"
			},
			"response": []
		},
		{
			"name": "PUT product/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "74c00560-2845-4f40-9824-d6333cdf9f96",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 204\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"Description\": \"{{PutDescription}}\",\n\t\"Model\": \"{{PutModel}}\",\n\t\"Brand\": \"{{PutBrand}}\"\n}"
				},
				"url": {
					"raw": "{{url}}/api/Product/{{ProductId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"Product",
						"{{ProductId}}"
					]
				},
				"description": "https://localhost:44382/api/Product/68f3df22-4733-4eac-b25d-ed397ed57359"
			},
			"response": []
		},
		{
			"name": "DELETE product/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4f20e0c1-cde1-47a8-9003-64c317ac249a",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 204\"] = responseCode.code === 204;",
							"",
							"tests[\"Deleted content\"] = !(responseBody.has(postman.getEnvironmentVariable(\"ProductId\")));"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {},
				"url": {
					"raw": "{{url}}/api/Product/{{ProductId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"Product",
						"{{ProductId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Product/Description/{desc}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "39fc6318-0189-4866-84ea-534801ace0a8",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							" ",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"Content-Type is application/json\"] = ",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"}",
							"",
							"var response = JSON.parse(responseBody);",
							"var b = true;",
							"",
							"response.forEach(function (obj) {",
							"    if(getVar(\"Description\") != obj.description) {",
							"        b = false;",
							"    }",
							"});",
							"tests[\"All Products have same Description\"] = b;",
							"",
							"function getVar(txt){",
							"    return postman.getEnvironmentVariable(txt);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "https://localhost:44382/api/Product/Description/{{Description}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44382",
					"path": [
						"api",
						"Product",
						"Description",
						"{{Description}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Product/Model/{model}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5777f592-2947-4aa0-9e05-b6c2e805643f",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							" ",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"Content-Type is application/json\"] = ",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"}",
							"",
							"var response = JSON.parse(responseBody);",
							"var b = true;",
							"",
							"response.forEach(function (obj) {",
							"    if(getVar(\"Model\") != obj.model) {",
							"        b = false;",
							"    }",
							"});",
							"tests[\"All Products have same Model\"] = b;",
							"",
							"function getVar(txt){",
							"    return postman.getEnvironmentVariable(txt);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "https://localhost:44382/api/Product/model/{{Model}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44382",
					"path": [
						"api",
						"Product",
						"model",
						"{{Model}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Product/Brand/{brand}",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1737eb2f-7784-46cb-99d6-b7fdd1dcdb36",
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							" ",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							" ",
							"if (contentTypeHeaderExists) {",
							"    tests[\"Content-Type is application/json\"] = ",
							"      responseHeaders[\"Content-Type\"].has(\"application/json\");",
							"}",
							"",
							"var response = JSON.parse(responseBody);",
							"var b = true;",
							"",
							"response.forEach(function (obj) {",
							"    if(getVar(\"Brand\") != obj.brand) {",
							"        b = false;",
							"    }",
							"});",
							"tests[\"All Products have same Brand\"] = b;",
							"",
							"function getVar(txt){",
							"    return postman.getEnvironmentVariable(txt);",
							"}"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "https://localhost:44382/api/Product/brand/{{Brand}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "44382",
					"path": [
						"api",
						"Product",
						"brand",
						"{{Brand}}"
					]
				}
			},
			"response": []
		}
	]
}